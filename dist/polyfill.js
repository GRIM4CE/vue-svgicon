!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.VueSvgIconPolyfill=t():e.VueSvgIconPolyfill=t()}(window,function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){var n=r(1);"string"!=typeof window.document.createElementNS("http://www.w3.org/2000/svg","svg").innerHTML&&n()},function(e,t){e.exports=function(){var e=function e(t,r){var n=t.nodeType;if(3==n)r.push(t.textContent.replace(/&/,"&amp;").replace(/</,"&lt;").replace(">","&gt;"));else if(1==n){if(r.push("<",t.tagName),t.hasAttributes())for(var o=t.attributes,i=0,u=o.length;i<u;++i){var f=o.item(i);r.push(" ",f.name,"='",f.value,"'")}if(t.hasChildNodes()){r.push(">");var l=t.childNodes;for(i=0,u=l.length;i<u;++i)e(l.item(i),r);r.push("</",t.tagName,">")}else r.push("/>")}else{if(8!=n)throw"Error serializing XML. Unhandled node of type: "+n;r.push("\x3c!--",t.nodeValue,"--\x3e")}};Object.defineProperty(SVGElement.prototype,"innerHTML",{get:function(){for(var t=[],r=this.firstChild;r;)e(r,t),r=r.nextSibling;return t.join("")},set:function(e){for(;this.firstChild;)this.removeChild(this.firstChild);try{var t=new DOMParser;t.async=!1;for(var r="<svg xmlns='http://www.w3.org/2000/svg'>"+e+"</svg>",n=t.parseFromString(r,"text/xml").documentElement.firstChild;n;)this.appendChild(this.ownerDocument.importNode(n,!0)),n=n.nextSibling}catch(e){throw console.error(e),new Error("Error parsing XML string")}}}),Object.defineProperty(SVGElement.prototype,"innerSVG",{get:function(){return this.innerHTML},set:function(e){this.innerHTML=e}})}}])});